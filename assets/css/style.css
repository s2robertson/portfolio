/* These styles are designed to be mobile first--everything starts out
 * as a single column, and gets expanded by the media queries at the end */

:root {
    --color-dark: midnightblue;
    --color-light: white;
    max-width: 80em; /* This keeps the images in the project list from breaking */
    margin: auto;
}

/* Header styles */

header {
    background-color: var(--color-dark);
    color: var(--color-light);
    display: flex;
    flex-direction: column;
    padding: 0.5em 1em;
    margin-bottom: 2em;
}

header h1 {
    flex: 1;
}

/* The nav element provides semantics, but isn't part of the layout */
header nav {
    display: contents;
}

header ul {
    display: flex;
    flex-direction: column;
}

header a {
    display: inline-block;
    padding: 0.25em;
    color: var(--color-light);
    border-radius: 5px;
}

header a:hover {
    text-decoration: none;
}

header a:focus {
    text-decoration: none;
    outline: 2px solid var(--color-light);
}

/* The main section starts out as a single column, but becomes a grid 
 * once a certain width is reached.  The goal was to get the section
 * headers to line up when the page is very wide. */
main {
    padding: 0 1em;
    display: grid;
    grid-template-columns: 1fr;
    gap: 1em;
    margin-bottom: 2em;
}

section {
    display: contents;
}

section h2 {
    color: var(--color-dark);
    border-bottom: 2px solid var(--color-dark);
}

.about-contents img {
    float: left;
    margin: 0 1em 1em 0;
    border-radius: 50%;
}

.about-contents p + p {
    margin-top: 0.5em;
}

/* The list of projects */
.project-list {
    display: grid;
    gap: 0.75em;
}

/* There are two goals here: 
 * 1) There should be a picture (background-image)
 * 2) The text/info card should be vertically centered. */
.project-list li {
    display: flex;
    flex-direction: column;
    align-items: start;
    justify-content: center;
    padding: 1em;
    min-height: 14em;
    text-decoration: none;
    background-position: center;
    background-size: cover;
}

/* I used custom classes, rather than :nth-child() in case I ever want to 
 * re-order the projects.  The images are/will be chosen to suit each project. */
.project-list-model-phone-system {
    background-image: url("../images/pexels-tyler-lastovich-699122-sm.jpg");
}

.project-list-book-search {
    background-image: url("../images/pexels-huỳnh-đạt-2177482-sm.jpg");
}

.project-list-payment-tracker {
    background-image: url("../images/pexels-pavel-danilyuk-7654579-sm.jpg");
}

.project-list-freelance-platform {
    background-image: url("../images/pexels-andrea-piacquadio-3760069.jpg");
}

.project-list-blog-site {
    background-image: url("../images/pexels-vlada-karpovich-4050468-sm.jpg");
}

.project-list-weather-dashboard {
    background-image: url("../images/pexels-brett-sayles-912364-sm.jpg");
}

.project-list-quiz-game {
    background-image: url("../images/pexels-andy-barbour-6683394-sm.jpg");
}

.project-list-card {
    background-color: lemonchiffon;
    color: black;
    padding: 0.5em;
}

/* Contact details */
.contact ul {
    display: flex;
    flex-direction: column;
    font-size: 1.15em;
}

/* add a phone icon */
.contact .phone::before {
    content: "\260E";
}

/* add a mail icon */
.contact .email::before {
    display: inline-block;
    content: "\1F4E7";
}

.contact a:hover {
    text-decoration: none;
}

/* The contact details are the first section to change to row orientation */
@media (min-width: 26em) {
    .contact ul {
        flex-direction: row;
        gap: 1em;
    }
}

@media (min-width: 36em) {
    /* At 36em, the nav links will display alongside the title.
     * The nav links will still be in a column, though */
    header {
        flex-direction: row;
        align-items: center;
    }

    /* Anything with project-list-big will need to change to a larger image */
    .project-list-model-phone-system {
        background-image: url("../images/pexels-tyler-lastovich-699122-med.jpg");
    }
}

/* At 44 ems, everything spreads out except section headings */
@media (min-width: 44em) {
    header ul {
        flex-direction: row;
    }

    .project-list {
        grid-template-columns: 1fr 1fr;
    }

    /* Anything using this will need to use a responsive image (see .project-list-model-phone-system above).
     * I used a class instead of a :first-child selector because hypothetically, I might want to have another
     * big list item. */
    .project-list li.project-list-big {
        min-height: 28em;
    }

    .project-list-big {
        grid-column: span 2;
    }
}

/* At 66 ems, the section headings start showing beside, instead of above */
@media (min-width: 66em) {
    main {
        grid-template-columns: auto 1fr;
        justify-content: center;
    }

    section h2 {
        border-bottom: 0;
        border-right: 2px solid var(--color-dark);
        padding-right: 0.5em;
    }
}